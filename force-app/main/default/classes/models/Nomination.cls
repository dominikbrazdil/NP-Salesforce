//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class Nomination {

	public Integer id;
	public String name;
	public Category category;
	public String location;
	public String gps;
	public String description;
	public String web;
	public String kraj;
	public String created;
	public NominationContact contact;


	public class Category {
		public String id;
		public String name;
	}

	public class ContactPerson {
		public String fullName;
		public String firstName;
		public String lastName;
		public String email;
		public String phone;
	}

	public class NominationContact {
		public String organization;
		public ContactPerson contaktPerson;
	}

	public Nominace__c createNomination() {
		return new NominationHandler()
		.setId(this.id)
		.setName(this.name)
		.setCategory(this.category.name)
		.setLocation(this.location)
		.setGps(this.gps)
		.setDescription(this.description)
		.setKraj(this.kraj)
		.setWeb(this.web)
		.setCreated(parseDate(created))
		.setContactEmail(this.contact.contaktPerson.email)
		.build();
	}

	public Account createAccount() {
		return new AccountHandler()
		.setName(this.contact.contaktPerson.fullName)
		.setDescription('Imported from Kentico')
		.build();
	}

	public Contact createContact() {
		return new ContactHandler()
		.setEmail(this.contact.contaktPerson.email)
		.setFirstName(getFirstName(this.contact.contaktPerson.fullName))
		.setLastName(getLastName(this.contact.contaktPerson.fullName))
		.setPhone(this.contact.contaktPerson.phone)
		.setDescription('Imported from Kentico')
		.build();
	}

	private Datetime parseDate(String dateStr) {
		Pattern dt = Pattern.compile('(?i)(\\d{2}).(\\d{2}).(\\d{4}) (\\d{2}):(\\d{2}):(\\d{2})');
		Matcher m = dt.matcher(dateStr);
		DateTime result;
		if(m.find()) {
			result = DateTime.newInstance(
				Integer.valueOf(m.group(3)),
				Integer.valueOf(m.group(2)),
				Integer.valueOf(m.group(1)),
				Integer.valueOf(m.group(4)),
				Integer.valueOf(m.group(5)),
				Integer.valueOf(m.group(6))        
			);
		}
		return result;
	}


	private String getFirstName(String fullName) {
		return fullName.contains(' ') ? fullName.split(' ')[0] : null;
	}

	private String getLastName(String fullName) {
		return fullName.contains(' ') ? fullName.split(' ', 2)[1]: fullName;
	}
	
	public static List<Nomination> parse(String json) {
		return (List<Nomination>) System.JSON.deserialize(json, List<Nomination>.class);
	}
}