//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class ZivaPudaContract {

	public Integer id;
	public String url;
	public String email;
	public String signingDate;
	public List<Owner> owners;
	public Lessee lessee;
	public List<Ground> grounds;
	public LeasePeriod leasePeriod;
	public Decimal rent;
	public Obligation obligations;
	public Resignation resignation;
	public Boolean sanctions;


	public class MeasuresByGround {
		public List<String> measures;
	}

    public class MandatoryMeasures {
		public String type;
        public MeasuresByGround[] measuresByGrounds;
	}

	public class LeasePeriod {
		public String type;
		public Integer howLong;
        public Integer noticePeriod;
	}

	public class Lessee {
		public String name;
		public String ICO;
		public String headquarters;
	}

	public class Owner {
		public String name;
		public String birthdate;
		public String address;
	}

	public class Obligation {
		public List<String> pledge;
		public MandatoryMeasures mandatoryMeasures;
	}

	public class Ground {
		public Integer id;
		public String uzemi;
		public String parcelID;
		public String type;
		public String area;
	}

	public class Resignation {
		public String lessee;
		public String owner;
		public String ownerElse;
		public String articles;
	}


	public Account createOwnerAccount() {
		return new AccountHandler()
		.setName(owners[0].name)
		.setDescription('Imported from Živá půda')
		.build();
	}

	public Contact createOwnerContact() {
		return new ContactHandler()
		.setEmail(email)
		.setFirstName(getFirstName(owners[0].name))
		.setLastName(getLastName(owners[0].name))
		.setDescription('Imported from Živá půda')
		.build();
	}

	public Contract__c createContract() {
		return new ContractHandler()
		.setID(id)
		.setName(owners[0].name)
		.setOwnerEmail(email)
		.setOwnerBirthYear(owners[0].birthdate != null ? Integer.valueOf(owners[0].birthdate.left(4)) : null)
		.setOwnerAddress(owners[0].address)
		.setLesseeName(lessee.name)
		.setLesseeICO(lessee.ICO)
		.setLesseeAddress(lessee.headquarters)
		.setSigningDate(Utils.parseDate(signingDate, 'd.M.y h:m:s'))
		.setOtherOwners(this.getOwners())
		.setRent(rent)
		.setRentPeriod(leasePeriod.howLong)
		.setNoticePeriod(leasePeriod.noticePeriod)
		.setType(leasePeriod.type)
		.setPledges(obligations.pledge)
		.setMeasuresType(obligations.mandatoryMeasures.type)
		.setOwnerResignation(resignation.owner)
		.setOwnerElseResignation(resignation.ownerElse)
		.setLesseeResignation(resignation.lessee)
		.setArticles(resignation.articles)
		.setSanctions(sanctions)
		.setURL(url)
		.build();
	}

	public List<Ground__c> createGrounds() {
		List<Ground__c> gs = new List<Ground__c>();
		for(Integer i = 0; i < grounds.size(); i++) {
			gs.add(new GroundHandler()
			.setName(grounds[i].uzemi)
			.setContractId(id)
			.setMeasures(this.obligations.mandatoryMeasures.type == 'konkrétní' ? this.obligations.mandatoryMeasures.measuresByGrounds[i].measures : new List<String>())
			.setType(grounds[i].type)
			.setParcelID(grounds[i].parcelID)
			.setArea(Decimal.valueOf(grounds[i].area))
			.build());
		}
		return gs;
	}

	@TestVisible
	private List<String> getOwners() {
		List<String> ownerStrings = new List<String>();
		for (Integer i = 1; i < owners.size(); i++) {
			Owner o = owners[i];
			ownerStrings.add(o.name + ' - ' + o.birthdate + ' - ' + o.address);
		}
		return ownerStrings;
	}

	private String getFirstName(String fullName) {
		return fullName.contains(' ') ? fullName.split(' ')[0] : null;
	}

	private String getLastName(String fullName) {
		return fullName.contains(' ') ? fullName.split(' ', 2)[1]: fullName;
	}
	

	
	public static List<ZivaPudaContract> parse(String json) {
		return (List<ZivaPudaContract>) System.JSON.deserialize(json, List<ZivaPudaContract>.class);
	}
}